MyMapApp Code Snippets 

<SplitView x:Name="MySplitView"
           DisplayMode="Inline"
           IsPaneOpen="True">
    
</SplitView>

-----------------------------------------------

<SplitView.Pane>
    <StackPanel Margin="0,30,0,0">
        <RadioButton Tag="Map"
                     Click="RadioButtonPaneItem_Click">
            <StackPanel Orientation="Horizontal">
                <SymbolIcon Symbol="Map" />
                <TextBlock Text="Map"
                           Margin="15,0,0,0" />
            </StackPanel>
        </RadioButton>
        <RadioButton Tag="Mail"
                     Click="RadioButtonPaneItem_Click">
            <StackPanel Orientation="Horizontal">
                <SymbolIcon Symbol="Mail" />
                <TextBlock Text="Mail"
                           Margin="15,0,0,0" />
            </StackPanel>
        </RadioButton>
        <RadioButton Tag="AddFriend"
                     Click="RadioButtonPaneItem_Click">
            <StackPanel Orientation="Horizontal">
                <SymbolIcon Symbol="AddFriend" />
                <TextBlock Text="Add a Friend"
                           Margin="15,0,0,0" />
            </StackPanel>
        </RadioButton>
        <RadioButton Tag="Settings"
                     Click="RadioButtonPaneItem_Click">
            <StackPanel Orientation="Horizontal">
                <SymbolIcon Symbol="Setting" />
                <TextBlock Text="Settings"
                           Margin="15,0,0,0" />
            </StackPanel>
        </RadioButton>
    </StackPanel>
</SplitView.Pane>

-----------------------------------------------

<Button x:Name="HamburgerButton"
        Width="{Binding ElementName=MySplitView, Path=CompactPaneLength}"
        VerticalAlignment="Top"
        Click="HamburgerButton_Click">
    <StackPanel>
        <Rectangle Width="15"
                   Height="2"
                   Margin="2"
                   Fill="White" />
        <Rectangle Width="15"
                   Height="2"
                   Margin="2"
                   Fill="White" />
        <Rectangle Width="15"
                   Height="2"
                   Margin="2"
                   Fill="White" />
    </StackPanel>
</Button>

-----------------------------------------------

MySplitView.IsPaneOpen = MySplitView.IsPaneOpen ? false : true;

-----------------------------------------------

<Application.Resources>
      <ResourceDictionary>
            <Style TargetType="RadioButton">
                  <Setter Property="Template">
                  <Setter.Value>
                  <ControlTemplate>
                  <ContentPresenter Margin="15" />
                  </ControlTemplate>
                  </Setter.Value>
                  </Setter>
            </Style>
      </ResourceDictionary>
</Application.Resources>

-----------------------------------------------

<SplitView.Content>
    <Frame x:Name="MainFrame" />
</SplitView.Content>

-----------------------------------------------

var radioButton = sender as RadioButton;

if (radioButton != null)
{
    switch (radioButton.Tag.ToString())
    {
        case "Map":
            MainFrame.Navigate(typeof(MapPage));
            break;
    }
}

-----------------------------------------------

<Page x:Class="MyMapApp.MapPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:local="using:MyMapApp"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:maps="using:Windows.UI.Xaml.Controls.Maps"
      mc:Ignorable="d">

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <StackPanel>
            <StackPanel x:Name="SearchControls"
                        Orientation="Horizontal">
                <CheckBox x:Name="TrafficCheckBox"
                          Content="Show traffic"
                          Width="100"
                          Height="50"
                          Margin="15,35,15,15"
                          Checked="TrafficCheckBox_Checked"
                          Unchecked="TrafficCheckBox_Unchecked"/>
                <Button x:Name="MapStyleButton"
                        Content="Aerial" 
                        Width="100"
                        Height="50"
                        Margin="15"
                        Click="MapStyleButton_Click"/>
            </StackPanel>
            <maps:MapControl x:Name="MapControl"
                             Height=”500"/>
        </StackPanel>
    </Grid>
</Page>

-----------------------------------------------

using System;
using Windows.Devices.Geolocation;
using Windows.UI.Popups;
using Windows.UI.Xaml;
using Windows.UI.Xaml.Controls;

namespace MyMapApp
{
    public sealed partial class MapPage : Page
    {
        public MapPage()
        {
            this.InitializeComponent();
            MapControl.Loaded += MapControl_Loaded;
            MapControl.MapTapped += MapControl_MapTapped;
        }

        private void MapControl_Loaded(object sender, RoutedEventArgs e)
        {
            MapControl.Center =
                new Geopoint(new BasicGeoposition()
                {
                    //Geopoint for Seattle 
                    Latitude = 47.604,
                    Longitude = -122.329
                });
            MapControl.ZoomLevel = 12;
        }

        private void TrafficCheckBox_Checked(object sender, RoutedEventArgs e)
        {
            MapControl.TrafficFlowVisible = true;
        }

        private void TrafficCheckBox_Unchecked(object sender, RoutedEventArgs e)
        {
            MapControl.TrafficFlowVisible = false;
        }

        private void MapStyleButton_Click(object sender, RoutedEventArgs e)
        {
            if (MapControl.Style == 
                Windows.UI.Xaml.Controls.Maps.MapStyle.Aerial)
            {
                MapControl.Style = 
                    Windows.UI.Xaml.Controls.Maps.MapStyle.Road;
                MapStyleButton.Content = "Aerial";
            }
            else
            {
                MapControl.Style = 
                    Windows.UI.Xaml.Controls.Maps.MapStyle.Aerial;
                MapStyleButton.Content = "Road";
            }
        }

        private async void MapControl_MapTapped(
            Windows.UI.Xaml.Controls.Maps.MapControl sender,
            Windows.UI.Xaml.Controls.Maps.MapInputEventArgs args)
        {
            var tappedGeoPosition = args.Location.Position;
            string status = 
                $"Map tapped at \nLatitude: {tappedGeoPosition.Latitude} " +
                $"\nLongitude: {tappedGeoPosition.Longitude}";

            var messageDialog = new MessageDialog(status);
            await messageDialog.ShowAsync();
        }
    }
}

-----------------------------------------------

    MySplitView.IsPaneOpen = false;

-----------------------------------------------

<VisualStateManager.VisualStateGroups>
    <VisualStateGroup>
        <VisualState x:Name="Narrow">
            <VisualState.StateTriggers>
                <AdaptiveTrigger MinWindowWidth="0" />
            </VisualState.StateTriggers>
            <VisualState.Setters>
                <Setter Target="MySplitView.DisplayMode"
                        Value="Overlay" />
                <Setter Target="MySplitView.IsPaneOpen"
                        Value="False" />
            </VisualState.Setters>
        </VisualState>
        <VisualState x:Name="Compact">
            <VisualState.StateTriggers>
                <AdaptiveTrigger MinWindowWidth="720" />
            </VisualState.StateTriggers>
            <VisualState.Setters>
                <Setter Target="MySplitView.DisplayMode"
                        Value="CompactOverlay" />
                <Setter Target="MySplitView.IsPaneOpen"
                        Value="False" />
            </VisualState.Setters>
        </VisualState>
        <VisualState x:Name="Wide">
            <VisualState.StateTriggers>
                <AdaptiveTrigger MinWindowWidth="1024"/>
            </VisualState.StateTriggers>
            <VisualState.Setters>
                <Setter Target="MySplitView.DisplayMode"
                        Value="CompactInline" />
                <Setter Target="MySplitView.IsPaneOpen"
                        Value="True" />
            </VisualState.Setters>
        </VisualState>
    </VisualStateGroup>
</VisualStateManager.VisualStateGroups>

-----------------------------------------------

<maps:MapControl x:Name="MapControl"
                 RelativePanel.AlignBottomWithPanel="True"
                 RelativePanel.AlignLeftWithPanel="True"/>

-----------------------------------------------

<VisualStateManager.VisualStateGroups>
    <VisualStateGroup>
        <VisualState x:Name="Narrow">
            <VisualState.StateTriggers>
                <AdaptiveTrigger MinWindowWidth="0" />
            </VisualState.StateTriggers>
            <VisualState.Setters>
                <Setter Target="SearchControls.(RelativePanel.AlignRightWithPanel)"
                        Value="True" />
                <Setter Target="MapControl.(RelativePanel.Below)"
                        Value="SearchControls" />
                <Setter Target="MapControl.(RelativePanel.AlignRightWithPanel)"
                        Value="True" />
            </VisualState.Setters>
        </VisualState>
        <VisualState x:Name="Wide">
            <VisualState.StateTriggers>
                <AdaptiveTrigger MinWindowWidth="720" />
            </VisualState.StateTriggers>
            <VisualState.Setters>
                <Setter Target="SearchControls.(RelativePanel.AlignRightWithPanel)"
                        Value="True" />
                <Setter Target="MapControl.(RelativePanel.AlignTopWithPanel)"
                        Value="True" />
                <Setter Target="MapControl.(RelativePanel.LeftOf)"
                        Value="SearchControls" />
            </VisualState.Setters>
        </VisualState>
    </VisualStateGroup>
</VisualStateManager.VisualStateGroups>

-----------------------------------------------



-----------------------------------------------
